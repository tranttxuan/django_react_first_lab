/// <reference types="node" />
import { ChildProcess, ExecException } from 'child_process';
import { Compiler } from 'webpack';
interface HookPluginOptions {
    onBuildStart?: string[];
    onBuildEnd?: string[];
    onBuildExit?: string[];
    onCompile?: string[];
    dev?: boolean;
    safe?: boolean;
}
declare class WebpackHookPlugin {
    options: HookPluginOptions;
    constructor(options: HookPluginOptions);
    puts(error: ExecException | null): void;
    spreadStdoutAndStdErr(proc: ChildProcess): void;
    serializeScript(script: string): {
        command: string;
        args: string[];
    };
    handleScript(script: string): void;
    mergeOptions(options: HookPluginOptions, defaults: HookPluginOptions): HookPluginOptions;
    apply(compiler: Compiler): void;
}
export default WebpackHookPlugin;
